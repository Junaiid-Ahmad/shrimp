#!/bin/bash
DEST_FILE=""
PAIRED=""
TMP_DIR="/tmp/$$"
SUFFIX=""
PROGRAM_NAME=$0
function usage {
  echo "Usage:" $0 --dest-file filename
  echo "
This script merges read hits generated by running gmapper across several
databases. It works for both sam and shrimp output format.

Parameters:

<out-file1> <out-file2> ...

--dest-file <dest-file>
        This parameter is required. It specifies the file where all hits will be
        stored.

--paired
--unpaired
        These parameters specify whether the hits were generated by running
        gmapper in paired mode (with -p) or not.

--tmp-dir <tmp-dir>
        Specifies a temporary directory to use. Defaults to /tmp/<PID>.

--suffix <suffix>
        Specifies an awk-style regexp matching the ending of a read tag that
        specifies whether the read is the first or second in a pair. This suffix
        is only used when neither --paired nor --unpaired is given, and only if
        shrimp output format is detected (and not sam). Defaults to ":[^:]*$".
Note:
        If neither --paired nor --unpaired is given, a script is run to detect
        the correct setting.
"
}

until [ -z "$1" ]; do
  case $1 in
    "--dest-file")
      shift
      DEST_FILE=$1; shift;;
    "--paired")
      shift
      PAIRED="yes";;
    "--unpaired")
      shift
      PAIRED="no";;
    "--suffix")
      shift
      SUFFIX=$1; shift;;
    "--tmp-dir")
      shift
      TMP_DIR=$1; shift;;
    *) break;;
  esac
done
if [ -z "$DEST_FILE" ]; then
  echo "ERROR: --dest-file was not specified"
  usage
  exit
fi
if [ -z "$PAIRED" ]; then
  echo "WARNING: --paired or --unpaired was not specified, trying to auto-detect"
fi
exit

# make temporary directory
if [ -d $TMP_DIR ]; then
  echo 1>&2 "error: temporary directory [$TMP_DIR] exists"
  exit 1
fi
mkdir -p $TMP_DIR

# detect output format
if [ ! -r "$1" ]; then
  echo 1>&2 "error: file [$1] unreadable"
  exit 1
fi
if [ ( head -n 50 $1 | cut -f 1 | grep -q '^>' ) ]; then
  FORMAT="shrimp"
  IGNORE="#"
else
  FORMAT="sam"
  IGNORE="@"
fi
echo 1>&2 "Detected format: $FORMAT"

# if pairing is unspecified, detect it with script
if [ -z "$PAIRED" ]; then
  if [ head -n 10000 $1 | awk -v SUFFIX="\"$SUFFIX\"" test-unpaired-$FORMAT ]; then
    PAIRED="no"
  else
    PAIRED="yes"
  fi
  echo 1>&2 "Detected pairing: $PAIRED"
fi

# write header from first file
head -n 50 $1 \\
  | grep "^$IGNORE" \\
  >$DEST_FILE

while [ "$#" -gt 0 ]; do
  if [ ! -r "$1" ]; then
    echo 1>&2 "error: file [$1] unreadable"
    exit 1
  fi

  if [ "$PAIRED" = "yes" ]; then
    grep -v "^$IGNORE" $1 \\
      | awk '{ first = $0; if (!getline) exit; printf "%s&&&&%s\n", first, $0; }' \\
      | sort \\
      >$TMP_DIR/$1.sort
  else
    grep -v "^$IGNORE" $1 \\
      | sort \\
      >$TMP_DIR/$1.sort
  fi
  shift
done

# merge into destination
if [ "$PAIRED" = "yes" ]; then
  sort -m $TMP_DIR/*.sort \\
    | sed 's/&&&&/\n/' \\
    >>$DEST_FILE
else
  sort -m $TMP_DIR/*.sort \\
    >>$DEST_FILE
fi
